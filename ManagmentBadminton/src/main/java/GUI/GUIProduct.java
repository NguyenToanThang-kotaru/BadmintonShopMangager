package GUI;

import DAO.ProductDAO;
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import javax.swing.table.TableColumnModel;
import java.util.List;

public class GUIProduct extends JPanel {

    private JPanel midPanel, topPanel, botPanel;
    private JTable productTable;
    private CustomTable tableModel;
    private JComboBox<String> roleComboBox;
    private CustomButton saveButton, addButton;
    private CustomSearch searchField;

    public GUIProduct() {
        setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        setBorder(new EmptyBorder(10, 10, 10, 10));
        setBackground(new Color(200, 200, 200));

        // ========== PANEL TR√äN C√ôNG ==========
        topPanel = new JPanel(new BorderLayout(10, 10));
        topPanel.setPreferredSize(new Dimension(0, 60));
        topPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10)); // Padding tr√™n-d∆∞·ªõi 10px
        topPanel.setBackground(Color.WHITE);
        // Thanh t√¨m ki·∫øm (70%)
        searchField = new CustomSearch(250, 30);
        searchField.setFont(new Font("Arial", Font.PLAIN, 14));
        searchField.setBackground(Color.WHITE);
//        searchField.setPreferredSize(new Dimension(0, 30));
        topPanel.add(searchField, BorderLayout.CENTER);

        // N√∫t "Th√™m t√†i kho·∫£n" (30%)
        addButton = new CustomButton("+ Th√™m s·∫£n ph·∫©m");
        addButton.setFont(new Font("Arial", Font.BOLD, 14));
        addButton.setPreferredSize(new Dimension(150, 30));
        topPanel.add(addButton, BorderLayout.EAST);

//        // ========== B·∫¢NG HI·ªÇN TH·ªä ==========
        midPanel = new JPanel(new BorderLayout());
        midPanel.setBackground(Color.WHITE);
        String[] columnNames = {"M√£ S·∫£n Ph·∫©m", "T√™n S·∫£n Ph·∫©m", "S·ªë l∆∞·ª£ng", "M√£ Nh√† CC", "M√£ Lo·∫°i"};
        tableModel = new CustomTable(columnNames);
        productTable = tableModel.getAccountTable();
        TableColumnModel columnModel = productTable.getColumnModel();
        columnModel.getColumn(1).setPreferredWidth(200); // TƒÉng ƒë·ªô r·ªông c·ªôt "Nh√¢n vi√™n"
        columnModel.getColumn(2).setPreferredWidth(150); // C·ªôt "T√†i kho·∫£n"
        columnModel.getColumn(3).setPreferredWidth(150); // C·ªôt "M·∫≠t kh·∫©u"
        columnModel.getColumn(4).setPreferredWidth(100); // C·ªôt "Quy·ªÅn

        // ScrollPane ƒë·ªÉ b·∫£ng c√≥ thanh cu·ªôn
        CustomScrollPane scrollPane = new CustomScrollPane(productTable);

        midPanel.add(scrollPane, BorderLayout.CENTER);

        // ========== PANEL CHI TI·∫æT T√ÄI KHO·∫¢N ==========  
        botPanel = new JPanel(new GridBagLayout());
        botPanel.setBackground(Color.WHITE);
        botPanel.setBorder(BorderFactory.createTitledBorder("Chi ti·∫øt s·∫£n ph·∫©m"));

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(5, 5, 5, 5);
        gbc.anchor = GridBagConstraints.WEST;

// ·∫¢nh n·∫±m ri√™ng bi·ªát b√™n tr√°i
        JLabel imageLabel = new JLabel();
        imageLabel.setPreferredSize(new Dimension(200, 200)); // K√≠ch th∆∞·ªõc ·∫£nh
        imageLabel.setBorder(BorderFactory.createLineBorder(Color.BLACK)); // Vi·ªÅn ƒëen

        gbc.gridx =0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST; // CƒÉn tr√™n, s√°t tr√°i
        gbc.insets = new Insets(0, 0, 10, 50); // T·∫°o kho·∫£ng c√°ch gi·ªØa ·∫£nh v√† th√¥ng tin
        botPanel.add(imageLabel, gbc);

// Panel con ch·ª©a th√¥ng tin ƒë·ªÉ cƒÉn gi·ªØa
        JPanel infoPanel = new JPanel(new GridBagLayout());
        infoPanel.setBackground(Color.WHITE);

        GridBagConstraints gbcInfo = new GridBagConstraints();
        gbcInfo.insets = new Insets(5, 5, 5, 5);
        gbcInfo.anchor = GridBagConstraints.WEST; // CƒÉn gi·ªØa n·ªôi dung
        gbcInfo.gridx = 0;
        gbcInfo.gridy = 0;

// Th√™m c√°c nh√£n v√†o infoPanel
        infoPanel.add(new JLabel("M√£ s·∫£n ph·∫©m: "), gbcInfo);
        gbcInfo.gridx = 1;
        JLabel productLabel = new JLabel("Ch·ªçn s·∫£n ph·∫©m");
        infoPanel.add(productLabel, gbcInfo);

        gbcInfo.gridx = 0;
        gbcInfo.gridy = 1;
        infoPanel.add(new JLabel("T√™n s·∫£n ph·∫©m: "), gbcInfo);
        gbcInfo.gridx = 1;
        JLabel namePDLabel = new JLabel("");
        infoPanel.add(namePDLabel, gbcInfo);

        gbcInfo.gridx = 0;
        gbcInfo.gridy = 2;
        infoPanel.add(new JLabel("S·ªë l∆∞·ª£ng: "), gbcInfo);
        gbcInfo.gridx = 1;
        JLabel quantityLabel = new JLabel("");
        infoPanel.add(quantityLabel, gbcInfo);

        gbcInfo.gridx = 0;
        gbcInfo.gridy = 3;
        infoPanel.add(new JLabel("M√£ NCC: "), gbcInfo);
        gbcInfo.gridx = 1;
        JLabel MaNCCidLabel = new JLabel("");
        infoPanel.add(MaNCCidLabel, gbcInfo);

        gbcInfo.gridx = 0;
        gbcInfo.gridy = 4;
        infoPanel.add(new JLabel("M√£ lo·∫°i: "), gbcInfo);
        gbcInfo.gridx = 1;
        JLabel TypeidLabel = new JLabel("");
        infoPanel.add(TypeidLabel, gbcInfo);

// N√∫t l∆∞u
        gbcInfo.gridx = 0;
        gbcInfo.gridy = 5;
        gbcInfo.gridwidth = 2;
        saveButton = new CustomButton("üíæ L∆∞u");
        saveButton.setPreferredSize(new Dimension(80, 30));
        infoPanel.add(saveButton, gbcInfo);

// Th√™m infoPanel v√†o botPanel ·ªü v·ªã tr√≠ c·ªôt 1 (b√™n ph·∫£i ·∫£nh)
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.gridheight = 1;
        gbc.anchor = GridBagConstraints.CENTER; // CƒÉn gi·ªØa n·ªôi dung th√¥ng tin
        botPanel.add(infoPanel, gbc);

        productTable.getSelectionModel().addListSelectionListener(e -> {
            int selectedRow = productTable.getSelectedRow();
            if (selectedRow != -1) {
                // L·∫•y d·ªØ li·ªáu t·ª´ b·∫£ng
                String masanpham = (String) productTable.getValueAt(selectedRow, 0);
                String tensanpham = (String) productTable.getValueAt(selectedRow, 1);
                String soluongsanpham = (String) productTable.getValueAt(selectedRow, 2);
                String mancc = (String) productTable.getValueAt(selectedRow, 3);
                String maloai = (String) productTable.getValueAt(selectedRow, 4);

                String productImg = ProductDAO.getProductImage(masanpham);

                // C·∫≠p nh·∫≠t giao di·ªán
                productLabel.setText(masanpham);
                quantityLabel.setText(soluongsanpham);
                namePDLabel.setText(tensanpham);
                TypeidLabel.setText(maloai);
                MaNCCidLabel.setText(mancc);

                if (productImg != null && !productImg.isEmpty()) {
                    String imagePath = "/images/" + productImg; // ƒê∆∞·ªùng d·∫´n trong resources
                    java.net.URL imageUrl = getClass().getResource(imagePath);

                    if (imageUrl != null) {
                        ImageIcon productIcon = new ImageIcon(imageUrl);
                        Image img = productIcon.getImage().getScaledInstance(200, 200, Image.SCALE_SMOOTH);
                        imageLabel.setIcon(new ImageIcon(img));
                    } else {
                        System.out.println("‚ö† Kh√¥ng t√¨m th·∫•y ·∫£nh: " + imagePath);
                        imageLabel.setIcon(null);
                    }
                } else {
                    imageLabel.setIcon(null);
                }

            }
        });

        // ========== TH√äM M·ªåI TH·ª® V√ÄO MAINPANEL ==========
        add(topPanel);
        add(Box.createVerticalStrut(10)); // Th√™m kho·∫£ng c√°ch 10px
        add(midPanel);
        add(Box.createVerticalStrut(10)); // Th√™m kho·∫£ng c√°ch 10px
        add(botPanel);
        loadProductData();
    }

    private void loadProductData() {
        List<String[]> productList = ProductDAO.getProductData();
        for (String[] product : productList) {
            tableModel.addRow(new Object[]{
                product[0], product[1], product[2], product[3], product[4]
            });
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            JFrame frame = new JFrame("Qu·∫£n l√Ω s·∫£n ph·∫©m");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.setSize(900, 600); // ƒê·∫∑t k√≠ch th∆∞·ªõc c·ª≠a s·ªï
            frame.setLocationRelativeTo(null); // CƒÉn gi·ªØa m√†n h√¨nh
            frame.setContentPane(new GUIProduct()); // ƒê·∫∑t JPanel Account v√†o JFrame
            frame.setVisible(true);
        });
    }
}
