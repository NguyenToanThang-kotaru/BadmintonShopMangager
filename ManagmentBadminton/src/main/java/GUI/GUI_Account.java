package GUI;

import BUS.AccountBUS;
import DTO.AccountDTO;
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.util.List;
import BUS.AccountBUS;

public class GUI_Account extends JPanel {

    // Khai b√°o c√°c th√†nh ph·∫ßn giao di·ªán
    private JPanel midPanel, topPanel, botPanel;
    private JTable accountTable;
    private DefaultTableModel tableModel;
    private JComboBox<String> roleComboBox;
    private CustomButton saveButton, addButton;
    private CustomSearch searchField;
    private AccountBUS accountBUS;

    public GUI_Account() {
        accountBUS = new AccountBUS(); // Kh·ªüi t·∫°o ƒë·ªëi t∆∞·ª£ng BUS ƒë·ªÉ l·∫•y d·ªØ li·ªáu t√†i kho·∫£n

        // C·∫•u h√¨nh layout ch√≠nh
        setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        setBorder(new EmptyBorder(10, 10, 10, 10));
        setBackground(new Color(200, 200, 200));

        // ========== PANEL TR√äN C√ôNG (Thanh t√¨m ki·∫øm & n√∫t th√™m) ==========
        topPanel = new JPanel(new BorderLayout(10, 10));
        topPanel.setPreferredSize(new Dimension(0, 60));
        topPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        topPanel.setBackground(Color.WHITE);

        searchField = new CustomSearch(275,40); // √î nh·∫≠p t√¨m ki·∫øm
        searchField.setBackground(Color.WHITE);
        topPanel.add(searchField, BorderLayout.CENTER);

        addButton = new CustomButton("+ Th√™m t√†i kho·∫£n"); // N√∫t th√™m t√†i kho·∫£n
        topPanel.add(addButton, BorderLayout.EAST);

        // ========== B·∫¢NG HI·ªÇN TH·ªä DANH S√ÅCH T√ÄI KHO·∫¢N ==========
        midPanel = new JPanel(new BorderLayout());
        midPanel.setBackground(Color.WHITE);

        // ƒê·ªãnh nghƒ©a ti√™u ƒë·ªÅ c·ªôt
        String[] columnNames = {"STT", "Nh√¢n vi√™n", "T√†i kho·∫£n", "M·∫≠t kh·∫©u", "Quy·ªÅn"};
        CustomTable customTable = new CustomTable(columnNames);
        accountTable = customTable.getAccountTable(); // L·∫•y JTable t·ª´ CustomTable
        tableModel = customTable.getTableModel(); // L·∫•y model c·ªßa b·∫£ng

        midPanel.add(customTable, BorderLayout.CENTER);

        // ========== PANEL CHI TI·∫æT T√ÄI KHO·∫¢N ==========
        botPanel = new JPanel(new GridBagLayout());
        botPanel.setBackground(Color.WHITE);
        botPanel.setBorder(BorderFactory.createTitledBorder("Chi ti·∫øt t√†i kho·∫£n"));

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(5, 5, 5, 5);
        gbc.anchor = GridBagConstraints.WEST;

        // Nh√£n hi·ªÉn th·ªã th√¥ng tin t√†i kho·∫£n
        gbc.gridx = 0;
        gbc.gridy = 0;
        botPanel.add(new JLabel("T√™n nh√¢n vi√™n: "), gbc);
        gbc.gridx = 1;
        JLabel employeeLabel = new JLabel("Ch·ªçn t√†i kho·∫£n");
        botPanel.add(employeeLabel, gbc);

        gbc.gridx = 0;
        gbc.gridy = 1;
        botPanel.add(new JLabel("T√†i kho·∫£n: "), gbc);
        gbc.gridx = 1;
        JLabel usernameLabel = new JLabel("");
        botPanel.add(usernameLabel, gbc);

        gbc.gridx = 0;
        gbc.gridy = 2;
        botPanel.add(new JLabel("M·∫≠t kh·∫©u: "), gbc);
        gbc.gridx = 1;
        JLabel passwordLabel = new JLabel("");
        botPanel.add(passwordLabel, gbc);

        gbc.gridx = 0;
        gbc.gridy = 3;
        botPanel.add(new JLabel("Quy·ªÅn t√†i kho·∫£n: "), gbc);
        gbc.gridx = 1;
        roleComboBox = new JComboBox<>(new String[]{"ADMIN1", "ADMIN2", "QUANLY1", "NHANVIEN1"});
        botPanel.add(roleComboBox, gbc);

        gbc.gridx = 1;
        gbc.gridy = 4;
        saveButton = new CustomButton("üíæ L∆∞u"); // N√∫t l∆∞u th√¥ng tin t√†i kho·∫£n
        botPanel.add(saveButton, gbc);

        // X·ª≠ l√Ω s·ª± ki·ªán ch·ªçn t√†i kho·∫£n trong b·∫£ng
        accountTable.getSelectionModel().addListSelectionListener(e -> {
            int selectedRow = accountTable.getSelectedRow();
            if (selectedRow != -1) {
                // L·∫•y d·ªØ li·ªáu t·ª´ b·∫£ng v√† chuy·ªÉn ƒë·ªïi sang String m·ªôt c√°ch an to√†n
                Object value = accountTable.getValueAt(selectedRow, 0);
                String valueStr = String.valueOf(value);
                String tenNhanVien = (String) accountTable.getValueAt(selectedRow, 1);
                String taiKhoan = (String) accountTable.getValueAt(selectedRow, 2);
                String matKhau = (String) accountTable.getValueAt(selectedRow, 3);
                String quyen = (String) accountTable.getValueAt(selectedRow, 4);

                // Hi·ªÉn th·ªã d·ªØ li·ªáu tr√™n giao di·ªán
                employeeLabel.setText(valueStr + " - " + tenNhanVien);
                usernameLabel.setText(taiKhoan);
                passwordLabel.setText(matKhau);
                roleComboBox.setSelectedItem(quyen);
            }
        });

//        saveButton.addActionListener(e -> {
//            int selectedRow = accountTable.getSelectedRow();
//            if (selectedRow != -1) {
//                // L·∫•y d·ªØ li·ªáu t·ª´ giao di·ªán
////                int employeeID = Integer.parseInt(employeeLabel.getText().split(" - ")[0]);
//                String employeeID = employeeLabel.getText();
//                String username = usernameLabel.getText();
//                String password = passwordLabel.getText();
//                String fullname = passwordLabel.getText();
//                String role = (String) roleComboBox.getSelectedItem();
//
//                // T·∫°o ƒë·ªëi t∆∞·ª£ng DTO
//                AccountDTO account = new AccountDTO(employeeID, username, password,fullname, role);
//
//                // C·∫≠p nh·∫≠t v√†o database
//                accountBUS.updateAccount(account);
//
//                // T·∫£i l·∫°i b·∫£ng
//                loadAccounts();
//                JOptionPane.showMessageDialog(this, "C·∫≠p nh·∫≠t t√†i kho·∫£n th√†nh c√¥ng!");
//            } else {
//                JOptionPane.showMessageDialog(this, "Vui l√≤ng ch·ªçn t√†i kho·∫£n ƒë·ªÉ ch·ªânh s·ª≠a!");
//            }
//        });

        // Th√™m c√°c panel v√†o giao di·ªán ch√≠nh
        add(topPanel);
        add(Box.createVerticalStrut(10));
        add(midPanel);
        add(Box.createVerticalStrut(10));
        add(botPanel);

        // T·∫£i d·ªØ li·ªáu t√†i kho·∫£n l√™n b·∫£ng
        loadAccounts();
    }

    // Ph∆∞∆°ng th·ª©c t·∫£i danh s√°ch t√†i kho·∫£n t·ª´ database l√™n b·∫£ng
    private void loadAccounts() {
        List<AccountDTO> accounts = accountBUS.getAllAccounts(); // L·∫•y danh s√°ch t√†i kho·∫£n
        tableModel.setRowCount(0); // X√≥a d·ªØ li·ªáu c≈© tr∆∞·ªõc khi c·∫≠p nh·∫≠t
        int index = 1;
        for (AccountDTO acc : accounts) {
            tableModel.addRow(new Object[]{index++, acc.getFullName(), acc.getUsername(), acc.getPassword(), acc.getRankID()});
        }
    }
}